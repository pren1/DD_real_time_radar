修改数据库设计：现在对每个同传man（阈值以上）/直播间都有单独的表记录

1.修改数据库名/表名存储方法
(1) 文件夹下建立constants包，下有所有常量数据库名/表名以及说明

2.修改同传匹配&计算长度规则
(1) 现在的同传弹幕匹配规则：只要包含【或者】或者以(（"“‘其中之一开头或者以)）"”’其中之一结尾的，均视为同传弹幕
(2) 计算长度规则：去除上述符号的后的弹幕字符数视为同传弹幕长度

3. 设定同传弹幕数阈值
(1) 用户同传弹幕数未达到阈值(DANMAKU_THRESHORD)时，不单独开表储存其弹幕
(2) 同传弹幕达到阈值后，其弹幕在名为MID_TABLE_OF+str(mid)的表中有备份
(3) 如果用户发的绝大部分都是符合“同传”格式匹配但不是同传弹幕，则可以修改其“阈值”并删表

4.提高效率（更新部分语句）：
(1) 添加必要的索引index
(2) 可以的部分用 find -> find_one
(3) 更换不必要的 aggregate 语句
(4) 现在平均（除了第一次插入/判断阈值的特殊时候）情况下：
(5) 一条同传弹幕要插三次表，查一次表（顺便update，使用$inc，效率比修改高一些）
(6) 插入/查询全都是按给定'_id'的方式查询

5.同传man与直播间的昵称获取处理
(1) 每次有新的Vtuber直播间，即抓取其昵称
(2) 同传man的同传弹幕数达到阈值后，抓取其昵称

6.其他小优化
(1) 同传man/直播间单独的表分别用'zz_m'和'zz_r'开头，这样用可视化工具看的时候这一千多个表不会挡在其他表上面
(2) 为了方便前端获取，弹幕信息本体一式三份。从每人开个表的idea开始的一切都是为了加快查询，尽管这会让插入很慢
(3) （负优化）一条弹幕信息在MongoDB里用mydict表达，用String做key来查，插入一条弹幕要查20次左右，
    希望python对这么个东西有相关优化吧，不然时间卡在python而不是MongoDB就很尴尬。可以考虑以后把这个dict换成tuple
(4) 更新同传man名字和直播间名字要用time.sleep，不然跑几分钟bilibili的api就被ban了
(5) 从Simon的弹幕库里插入弹幕的时候，如果没有找到时间戳(timestamp)就用txt文件名('%Y-%m-%d'格式)的当天00:00:00代替

7.（未完成）
(1) 查询同传man/直播间的对应的弹幕信息的函数
(2) 更换update排名的功能

by scPointer
